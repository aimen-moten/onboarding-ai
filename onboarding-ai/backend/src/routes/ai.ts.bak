import express from 'express';
import { db } from '../server'; // Assuming your db export is still valid

const router = express.Router();

router.post('/', async (req, res) => {
  const { userId, fileId, fileName, mimeType, accessToken, source } = req.body;

  if (!userId || !fileId || !accessToken) {
    return res.status(400).json({ error: 'Missing required data for AI processing.' });
  }

  // STEP 1: Store Metadata in Firestore
  // This confirms the selection was registered, and the Genkit Main Agent can use this metadata.
  try {
    const docRef = db.collection('courses').doc(fileId);
    await docRef.set({
      fileId,
      fileName,
      mimeType,
      source,
      userId,
      accessToken, // Store the token temporarily for the Genkit agent
      status: 'PENDING_AI',
      timestamp: new Date(),
    });

    // STEP 2: (For Checkpoint 2) Trigger Genkit Flow here...

    res.json({ success: true, message: 'File registered and AI pipeline started.' });

  } catch (error) {
    console.error('Error saving metadata or starting AI:', error);
    res.status(500).json({ error: 'Internal server error during processing start.' });
  }
});

export default router;